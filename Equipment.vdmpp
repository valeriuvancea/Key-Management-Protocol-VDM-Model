class Equipment
values
	public undefinedState = <Undefined>;

operations
	public NextState: MessageInterface ==> ()
	 NextState(message) == is subclass responsibility;

functions
	protected GetNextStateFromSequenceUsingCurrentState[@T]: seq of @T * @T -> @T
	GetNextStateFromSequenceUsingCurrentState(sequence, currentState) ==
		let i in set inds sequence be st sequence(i) = currentState in
			if (i = len sequence) then
				sequence(1)
			else 
				sequence(i+1)
	post RESULT in set elems sequence;

end Equipment