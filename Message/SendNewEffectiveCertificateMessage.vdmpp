class SendNewEffectiveCertificateMessage is subclass of BaseMessage
instance variables
    private static effectiveCertificates: set of seq of char := {};
    private static savedKeyVaultSigningCertificate: seq of char := "";

operations
    public SendNewEffectiveCertificateMessage: seq of char * seq of char * bool * seq of char * seq of char ==> SendNewEffectiveCertificateMessage
    SendNewEffectiveCertificateMessage(messageType, controllerId, isForKeyVault, effectiveCertificate, keyVaultSigningCertificate) == (
        AddField("effectiveCertificate", effectiveCertificate);
        AddField("keyVaultSigningCertificate", keyVaultSigningCertificate);
        effectiveCertificates := effectiveCertificates union {effectiveCertificate};
        savedKeyVaultSigningCertificate := keyVaultSigningCertificate;
        BaseMessage(messageType, controllerId, isForKeyVault);
    )
    pre effectiveCertificate not in set effectiveCertificates
    post GetMessageType() = "SendNewEffectiveCertificate" and savedKeyVaultSigningCertificate~ <> "" => savedKeyVaultSigningCertificate = savedKeyVaultSigningCertificate~;

    public pure GetEffectiveCertificate: () ==> seq of char
    GetEffectiveCertificate() == return GetField("effectiveCertificate");

    public pure GetKeyVaultSigningCertificate: () ==> seq of char
    GetKeyVaultSigningCertificate() == return GetField("keyVaultSigningCertificate");

end SendNewEffectiveCertificateMessage